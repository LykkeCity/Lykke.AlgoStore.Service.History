<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lykke.AlgoStore.Service.History.Client</name>
    </assembly>
    <members>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the HistoryAPI class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling HistoryAPI.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the HistoryAPI class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the HistoryAPI class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the HistoryAPI class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the HistoryAPI class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.GetCandlesWithHttpMessagesAsync(System.DateTime,System.DateTime,System.String,Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleTimeInterval,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <param name='startFrom'>
            The start of the period to get candles for (inclusive)
            </param>
            <param name='endOn'>
            The end of the period to get candles for (exclusive)
            </param>
            <param name='assetPair'>
            The asset pair to get candles for
            </param>
            <param name='candleTimeInterval'>
            The candle time interval to get candles for. Possible values include:
            'Unspecified', 'Sec', 'Minute', 'Min5', 'Min15', 'Min30', 'Hour', 'Hour4',
            'Hour6', 'Hour12', 'Day', 'Week', 'Month'
            </param>
            <param name='indicatorName'>
            The name of the indicator to fetch candles for
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.GetFunctionForPeriodWithHttpMessagesAsync(System.DateTime,System.DateTime,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <param name='fromParameter'>
            </param>
            <param name='to'>
            </param>
            <param name='instanceId'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.IsAliveWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks service is alive
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPI.GetQuotesForPeriodWithHttpMessagesAsync(System.DateTime,System.DateTime,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <param name='fromParameter'>
            </param>
            <param name='to'>
            </param>
            <param name='instanceId'>
            </param>
            <param name='asetPair'>
            </param>
            <param name='isBuy'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPIExtensions">
            <summary>
            Extension methods for HistoryAPI.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPIExtensions.GetCandles(Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI,System.DateTime,System.DateTime,System.String,Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleTimeInterval,System.String)">
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='startFrom'>
            The start of the period to get candles for (inclusive)
            </param>
            <param name='endOn'>
            The end of the period to get candles for (exclusive)
            </param>
            <param name='assetPair'>
            The asset pair to get candles for
            </param>
            <param name='candleTimeInterval'>
            The candle time interval to get candles for. Possible values include:
            'Unspecified', 'Sec', 'Minute', 'Min5', 'Min15', 'Min30', 'Hour', 'Hour4',
            'Hour6', 'Hour12', 'Day', 'Week', 'Month'
            </param>
            <param name='indicatorName'>
            The name of the indicator to fetch candles for
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPIExtensions.GetCandlesAsync(Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI,System.DateTime,System.DateTime,System.String,Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleTimeInterval,System.String,System.Threading.CancellationToken)">
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='startFrom'>
            The start of the period to get candles for (inclusive)
            </param>
            <param name='endOn'>
            The end of the period to get candles for (exclusive)
            </param>
            <param name='assetPair'>
            The asset pair to get candles for
            </param>
            <param name='candleTimeInterval'>
            The candle time interval to get candles for. Possible values include:
            'Unspecified', 'Sec', 'Minute', 'Min5', 'Min15', 'Min30', 'Hour', 'Hour4',
            'Hour6', 'Hour12', 'Day', 'Week', 'Month'
            </param>
            <param name='indicatorName'>
            The name of the indicator to fetch candles for
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPIExtensions.GetFunctionForPeriod(Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI,System.DateTime,System.DateTime,System.String)">
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='fromParameter'>
            </param>
            <param name='to'>
            </param>
            <param name='instanceId'>
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPIExtensions.GetFunctionForPeriodAsync(Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI,System.DateTime,System.DateTime,System.String,System.Threading.CancellationToken)">
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='fromParameter'>
            </param>
            <param name='to'>
            </param>
            <param name='instanceId'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPIExtensions.IsAlive(Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI)">
            <summary>
            Checks service is alive
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPIExtensions.IsAliveAsync(Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI,System.Threading.CancellationToken)">
            <summary>
            Checks service is alive
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPIExtensions.GetQuotesForPeriod(Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI,System.DateTime,System.DateTime,System.String,System.String,System.Nullable{System.Boolean})">
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='fromParameter'>
            </param>
            <param name='to'>
            </param>
            <param name='instanceId'>
            </param>
            <param name='asetPair'>
            </param>
            <param name='isBuy'>
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.HistoryAPIExtensions.GetQuotesForPeriodAsync(Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI,System.DateTime,System.DateTime,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='fromParameter'>
            </param>
            <param name='to'>
            </param>
            <param name='instanceId'>
            </param>
            <param name='asetPair'>
            </param>
            <param name='isBuy'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI.GetCandlesWithHttpMessagesAsync(System.DateTime,System.DateTime,System.String,Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleTimeInterval,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <param name='startFrom'>
            The start of the period to get candles for (inclusive)
            </param>
            <param name='endOn'>
            The end of the period to get candles for (exclusive)
            </param>
            <param name='assetPair'>
            The asset pair to get candles for
            </param>
            <param name='candleTimeInterval'>
            The candle time interval to get candles for. Possible values
            include: 'Unspecified', 'Sec', 'Minute', 'Min5', 'Min15', 'Min30',
            'Hour', 'Hour4', 'Hour6', 'Hour12', 'Day', 'Week', 'Month'
            </param>
            <param name='indicatorName'>
            The name of the indicator to fetch candles for
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI.GetFunctionForPeriodWithHttpMessagesAsync(System.DateTime,System.DateTime,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <param name='fromParameter'>
            </param>
            <param name='to'>
            </param>
            <param name='instanceId'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI.IsAliveWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks service is alive
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.IHistoryAPI.GetQuotesForPeriodWithHttpMessagesAsync(System.DateTime,System.DateTime,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <param name='fromParameter'>
            </param>
            <param name='to'>
            </param>
            <param name='instanceId'>
            </param>
            <param name='asetPair'>
            </param>
            <param name='isBuy'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleModel.#ctor">
            <summary>
            Initializes a new instance of the CandleModel class.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleModel.#ctor(System.DateTime,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the CandleModel class.
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleModel.DateTime">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleModel.Open">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleModel.Close">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleModel.High">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleModel.Low">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleModel.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.CandleTimeInterval">
            <summary>
            Defines values for CandleTimeInterval.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.ErrorResponseModel.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponseModel class.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.ErrorResponseModel.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the ErrorResponseModel class.
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.ErrorResponseModel.Errors">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.ErrorResponseModel.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.FunctionChartingUpdate.#ctor">
            <summary>
            Initializes a new instance of the FunctionChartingUpdate class.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.FunctionChartingUpdate.#ctor(System.String,System.Double,System.String,System.DateTime,System.Collections.Generic.IList{Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.FunctionChartingUpdate})">
            <summary>
            Initializes a new instance of the FunctionChartingUpdate class.
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.FunctionChartingUpdate.FunctionName">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.FunctionChartingUpdate.Value">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.FunctionChartingUpdate.InstanceId">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.FunctionChartingUpdate.CalculatedOn">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.FunctionChartingUpdate.InnerFunctions">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.FunctionChartingUpdate.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IsAliveResponse.#ctor">
            <summary>
            Initializes a new instance of the IsAliveResponse class.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IsAliveResponse.#ctor(System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IList{Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IssueIndicator})">
            <summary>
            Initializes a new instance of the IsAliveResponse class.
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IsAliveResponse.Name">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IsAliveResponse.Version">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IsAliveResponse.Env">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IsAliveResponse.IsDebug">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IsAliveResponse.IssueIndicators">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IsAliveResponse.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IssueIndicator.#ctor">
            <summary>
            Initializes a new instance of the IssueIndicator class.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IssueIndicator.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the IssueIndicator class.
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IssueIndicator.Type">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IssueIndicator.Value">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.IssueIndicator.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.QuoteChartingUpdate.#ctor">
            <summary>
            Initializes a new instance of the QuoteChartingUpdate class.
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.QuoteChartingUpdate.#ctor(System.Boolean,System.Double,System.DateTime,System.DateTime,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the QuoteChartingUpdate class.
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.QuoteChartingUpdate.IsBuy">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.QuoteChartingUpdate.Price">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.QuoteChartingUpdate.Timestamp">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.QuoteChartingUpdate.DateReceived">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.QuoteChartingUpdate.IsOnline">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.QuoteChartingUpdate.InstanceId">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.QuoteChartingUpdate.AssetPair">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.AutorestClient.Models.QuoteChartingUpdate.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Lykke.AlgoStore.Service.History.Client.ContainerBuilderExtensions">
            <summary>
            Used to register the history client in the AutoFac container
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.ContainerBuilderExtensions.RegisterHistoryClient(Autofac.ContainerBuilder,System.String)">
            <summary>
            Registers the history client using a given service URL and log
            </summary>
            <param name="builder">The container to register the history client in</param>
            <param name="serviceUrl">The history client URL</param>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.ContainerBuilderExtensions.RegisterHistoryClient(Autofac.ContainerBuilder,Lykke.AlgoStore.Service.History.Client.HistoryServiceClientSettings)">
            <summary>
            Registers the history client using a given settings class and log
            </summary>
            <param name="builder">The container to register the history client in</param>
            <param name="settings">The settings to use for configuring the client</param>
        </member>
        <member name="T:Lykke.AlgoStore.Service.History.Client.HistoryServiceClientSettings">
            <summary>
            Configuration for the history service client
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.HistoryServiceClientSettings.ServiceUrl">
            <summary>
            The URL of the history service
            </summary>
        </member>
        <member name="T:Lykke.AlgoStore.Service.History.Client.IHistoryClient">
            <summary>
            Interface for fetching historical candle data
            </summary>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.IHistoryClient.GetCandles(System.DateTime,System.DateTime,System.String,Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval,System.String,System.String)">
            <summary>
            Get historical candles for a given period
            </summary>
            <param name="from">The start date for the candle period (inclusive)</param>
            <param name="to">The end date for the candle period (exclusive)</param>
            <param name="assetPair">The asset pair of the indicator</param>
            <param name="timeInterval">The candle time interval of the indicator</param>
            <param name="indicatorName">The name of the indicator to fetch candles for</param>
            <param name="authToken">The instance authentication token</param>
            <returns>A list of candles for the given period</returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="indicatorName"/>, <paramref name="assetPair"/> 
            or <paramref name="authToken"/> are null
            </exception>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when an unexpected error has occured. See exception message for details
            </exception>
            <exception cref="T:System.AggregateException">
            Thrown when there are validation errors. Each validation message is contained within
            a <see cref="T:System.ArgumentException"/>
            </exception>
        </member>
        <member name="M:Lykke.AlgoStore.Service.History.Client.IHistoryClient.GetQuotes(System.DateTime,System.DateTime,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
             Get historical quotes for a given period
            </summary>
            <param name="from">The start date for the quote period (inclusive)</param>
            <param name="to">The end date for the quote period (exclusive)</param>
            <param name="assetPair">The asset pair of the indicator</param>
            <param name="instanceId">The instanceId of the quote</param>
            <param name="authToken">The instance authentication token</param>
            <param name="isBuy">Indicates buy/sell quotes (optional)</param>
            <returns>A list of quotes for the given period</returns>
        </member>
        <member name="T:Lykke.AlgoStore.Service.History.Client.Models.Candle">
            <summary>
            Represents a candle
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.Models.Candle.DateTime">
            <summary>
            The date of the candle
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.Models.Candle.Open">
            <summary>
            The open price of the candle
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.Models.Candle.Close">
            <summary>
            The close price of the candle
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.Models.Candle.High">
            <summary>
            The highest price of the candle
            </summary>
        </member>
        <member name="P:Lykke.AlgoStore.Service.History.Client.Models.Candle.Low">
            <summary>
            The lowest price of the candle
            </summary>
        </member>
        <member name="T:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval">
            <summary>
            The period length each candle should cover
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Sec">
            <summary>
            One second
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Minute">
            <summary>
            One minute
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Min5">
            <summary>
            Five minutes
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Min15">
            <summary>
            Fifteen minutes
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Min30">
            <summary>
            Thirty minutes
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Hour">
            <summary>
            One hour
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Hour4">
            <summary>
            Four hours
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Hour6">
            <summary>
            Six hours
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Hour12">
            <summary>
            Twelve hours
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Day">
            <summary>
            One day
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Week">
            <summary>
            One week
            </summary>
        </member>
        <member name="F:Lykke.AlgoStore.Service.History.Client.Models.CandleTimeInterval.Month">
            <summary>
            One month
            </summary>
        </member>
    </members>
</doc>
