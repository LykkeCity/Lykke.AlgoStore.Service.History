// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.AlgoStore.Service.History.Client.AutorestClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class QuoteChartingUpdate
    {
        /// <summary>
        /// Initializes a new instance of the QuoteChartingUpdate class.
        /// </summary>
        public QuoteChartingUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QuoteChartingUpdate class.
        /// </summary>
        public QuoteChartingUpdate(bool isBuy, double price, System.DateTime timestamp, System.DateTime dateReceived, bool isOnline, string instanceId, string assetPair)
        {
            IsBuy = isBuy;
            Price = price;
            Timestamp = timestamp;
            DateReceived = dateReceived;
            IsOnline = isOnline;
            InstanceId = instanceId;
            AssetPair = assetPair;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsBuy")]
        public bool IsBuy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Price")]
        public double Price { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Timestamp")]
        public System.DateTime Timestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateReceived")]
        public System.DateTime DateReceived { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsOnline")]
        public bool IsOnline { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InstanceId")]
        public string InstanceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetPair")]
        public string AssetPair { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (InstanceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InstanceId");
            }
            if (AssetPair == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AssetPair");
            }
        }
    }
}
